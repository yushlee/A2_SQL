SELECT STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_ID, STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_ID, SALES, STORE_NAME FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION;

-- 欄位資料去重覆
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;

-- 1.以整列資料為去重覆的依據
-- 2.DISTINCT位置只能在欄位的最前面
-- 3.DISTINCT只能下一次
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;
SELECT DISTINCT STORE_ID, STORE_NAME FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION 
WHERE SALES > 1000;

SELECT * FROM STORE_INFORMATION 
WHERE SALES >= 1500;

-- AND(且):條件同時成立
-- OR(或):條件單一成立
SELECT * FROM STORE_INFORMATION
WHERE SALES > 250 AND STORE_DATE > '2018-04-01';

SELECT * FROM STORE_INFORMATION
WHERE SALES <= 300 OR SALES >= 2500;


SELECT * FROM STORE_INFORMATION
WHERE STORE_ID = 1
OR STORE_ID = 2
OR STORE_ID = 3;

SELECT * FROM STORE_INFORMATION
WHERE STORE_ID IN (1,2,3);

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME IN ('Los Angeles', 'Boston');


SELECT * FROM STORE_INFORMATION
WHERE SALES >= 300 AND SALES <= 2500;

-- BETWEEN ... AND
SELECT * FROM STORE_INFORMATION
WHERE SALES BETWEEN 300 AND 2500;

SELECT * FROM STORE_INFORMATION
WHERE STORE_DATE BETWEEN '2018-02-01' AND '2018-05-30';


SELECT STORE_ID, STORE_NAME, STORE_DATE, DATE_FORMAT(STORE_DATE, '%Y-%m')
FROM STORE_INFORMATION
WHERE DATE_FORMAT(STORE_DATE, '%Y-%m') BETWEEN '2018-02' AND '2018-05';


SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%s';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%os%';

SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%s';

SELECT * FROM STORE_INFORMATION
WHERE BINARY STORE_NAME LIKE  'l%s';


SELECT * FROM geography;

-- SQL 練習題(一)
SELECT * FROM STORE_INFORMATION
-- 1.「且」找出屬於西區的商店
WHERE GEOGRAPHY_ID = 2
-- 2.「且」營業額大於300(包含300)
AND SALES >= 300
-- 3.「且」商店名稱'L'開頭
AND STORE_NAME LIKE 'L%'
-- 4.「或」營業日介於2018年3月至4月
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';

-- ASC:預設是升幕排序
-- DESC:降幕排序
SELECT * FROM STORE_INFORMATION
ORDER BY SALES ASC;

SELECT * FROM STORE_INFORMATION
ORDER BY SALES DESC, STORE_DATE DESC;

-- Aggregate Functions 聚合函數
SELECT SUM(SALES), AVG(SALES), COUNT(STORE_ID),
	MAX(SALES), MIN(SALES)
FROM STORE_INFORMATION;
