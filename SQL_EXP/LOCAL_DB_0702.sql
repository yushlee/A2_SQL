SELECT STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_ID,STORE_NAME,SALES FROM STORE_INFORMATION;

SELECT STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION;

-- DISTINCT
-- 找出表格內的不同資料值的情況
-- 1.以整列資料列為去重覆為依據
-- 2.DISTINCT只能一次
-- 3.DISTINCT只能下在欄位的最前面
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;

SELECT DISTINCT STORE_ID, STORE_NAME FROM STORE_INFORMATION;

SELECT * FROM STORE_INFORMATION WHERE SALES > 1000;

-- AND 嚴謹(資料限縮)
-- OR 寬鬆(資料擴展)
SELECT * FROM STORE_INFORMATION
WHERE SALES > 1000
OR (SALES > 270 AND SALES < 500);

SELECT * 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID = 2
AND SALES >= 300;

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_ID = 1
OR STORE_ID = 2
OR STORE_ID = 3;

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_ID IN (1,2,3);

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME IN ('Boston', 'Los Angeles');

SELECT * 
FROM STORE_INFORMATION
WHERE SALES >= 300 AND SALES <= 2500;

-- BETWEEN 則是讓我們可以運用一個範圍 (range) 內 抓出資料庫中的值
SELECT * 
FROM STORE_INFORMATION
WHERE SALES BETWEEN 300 AND 2500;

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_DATE BETWEEN '2018-02-01' AND '2018-05-30';


SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%s';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%An%';

SELECT * 
FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%s';

/*
1.「且」找出屬於西區的商店
2.「且」營業額大於300(包含300)
3.「且」商店名稱"L"開頭
4.「或」營業日介於2018年3月至4月
*/
SELECT * 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID = 2
AND SALES >= 300
AND STORE_NAME LIKE 'L%'
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';

-- ASC(預設)
-- 小往大 (ascending) 
SELECT * 
FROM STORE_INFORMATION
ORDER BY SALES ASC;

-- DESC
-- 由大往小(descending)
SELECT * 
FROM STORE_INFORMATION
ORDER BY SALES DESC;

-- ASC(預設)
SELECT * 
FROM STORE_INFORMATION
ORDER BY SALES;

-- 主排序欄位:SALES(營業額)
-- 次排序欄位:STORE_DATE(營業日)
SELECT * 
FROM STORE_INFORMATION
ORDER BY SALES DESC, STORE_DATE DESC;


-- SQL Aggregate Functions 聚合函數
SELECT SUM(SALES), COUNT(STORE_ID), AVG(SALES),
	MIN(SALES), MAX(SALES)
FROM STORE_INFORMATION;


