INSERT INTO store_information (STORE_ID, STORE_NAME, SALES, STORE_DATE, GEOGRAPHY_ID)
	VALUES(10, 'AppleInc', 5600, '2023-03-11 00:00:00', 3);
    
SELECT * FROM store_information;

-- 可對交易異動中的資料在資料未提交commit前，進行rollback取消這次交易所有的資料異動指令
ROLLBACK;

-- COMMIT 完成交易作業
-- 如進行資料異動操作後最後須執行交易提交commit的動作資料方可異動成功
-- 交易隔離性：資料庫交易與交易之間彼此獨立，一個交易是看不到另一個交易所異動中的資料
COMMIT;


-- SQL UNION 聯集(不包含重覆值)
-- 1.查詢與查詢之間SELECT的欄位"個數必須相同"
-- 2.查詢與查詢之間SELECT的欄位"型別相同"
-- 1,2,3
SELECT GEOGRAPHY_ID  FROM GEOGRAPHY
UNION
-- NULL,1,2,3
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;

-- SQL UNION ALL 聯集(包含重覆值)
-- 1,2,3
SELECT GEOGRAPHY_ID  FROM GEOGRAPHY
UNION ALL
-- NULL,1,2,3
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;

-- SQL INTERSECT 交集
-- MySQL不支援INTERSECT語句
/*
SELECT GEOGRAPHY_ID  FROM GEOGRAPHY
INTERSECT
-- NULL,1,2,3
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;
*/

-- INNER JOIN + DISTINCT = INTERSECT 查詢交集結果
SELECT DISTINCT G.GEOGRAPHY_ID
FROM GEOGRAPHY G
JOIN STORE_INFORMATION S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID;

-- SQL MINUS 排除(不包含重覆值) 
-- MySQL不支援MINUS語句
/*
-- Oracle
SELECT GEOGRAPHY_ID  FROM GEOGRAPHY
MINUS
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;

-- MS SQL
SELECT GEOGRAPHY_ID  FROM GEOGRAPHY
EXCEPT
SELECT GEOGRAPHY_ID FROM STORE_INFORMATION;
*/

-- LEFT JOIN + table2.id IS NULL = MINUS
SELECT G.GEOGRAPHY_ID
FROM GEOGRAPHY G
LEFT JOIN STORE_INFORMATION S ON G.GEOGRAPHY_ID = S.GEOGRAPHY_ID
WHERE S.GEOGRAPHY_ID IS NULL;


-- SQL SubQuery 子查詢
-- SQL EXISTS 存在式關聯查詢
-- SQL CASE WHEN 條件查詢

